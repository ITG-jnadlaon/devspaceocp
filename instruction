# openshift node.js application with postgresql database push via CI/CD gitlab #########
pull image from quay.io/enterprisedb/postgresql:15
env variables for postgresql 
POSTGRES_USER=petclinic POSTGRES_PASSWORD=petclinic POSTGRES_DATABASE=petclinic
create PVC = mount claim,RWO,1GB,/var/lib/pgdata
pull image from https://gitlab.com/nicholson.adlaon/spring-petclinic-edb-postgres
set env for petclinic
SPRING_PROFILES_ACTIVE=postgres POSTGRES_URL=jdbc:postgresql://{IP_ADD_POD}:5432/petclinic
#####################################
# nginx ingress security sample for openshift ####
add application create nginx builder image
set the application code from https://github.com/tkmru/nginx-http-splitting-sample
create route then access and checks the vulnerability
check and confirm in the pods events
#####################################
# nginx sample reverse proxy on ocp devspace
create configmap file for nginx.conf
pull image from https://quay.io/repository/nginx/nginx-unprivileged
edit deployment to attach volume and volume mountpoints
####################################
# nginx_plus own image registry
podman login private-registry.nginx.com --username=<output_of_jwt_token> --password=none
podman pull private-registry.nginx.com/nginx-plus/base:<version-tag>
podman pull private-registry.nginx.com/nginx-plus/rootless-base:<version-tag> #non-root
podman pull private-registry.nginx.com/nginx-plus/rootless-base:<version-tag>
podman tag private-registry.nginx.com/nginx-plus/rootless-agent:nginx-plus-r31-ubi-9 quay.io/nicholson_adlaon/nginx-plus/rootless-agent:nginx-plus-r31-ubi-9
podman pull quay.io/nicholson_adlaon/nginx-plus/rootless-agent
#####################################
# create vm on openshift devspace
go to openshift administrator console
go to virtualization
create from template
create VirtualMachine name
edit storage and disk source PVC
from PVC project and select openshift-virtualization-os-image
select desire PVC based on virtualization-OS
create virtualmachine
######################################
# Configuring the registry for bare metal
# https://docs.openshift.com/container-platform/4.16/registry/configuring_registry_storage/configuring-registry-storage-baremetal.html
# backup openshift local image
oc get -o yaml configs.imageregistry.operator.openshift.io cluster > image.yaml
# patch openshift image
oc patch config.imageregistry.operator.openshift.io/cluster --type=merge -p '{"spec":{"rolloutStrategy":"Recreate","replicas":1}}'
# verify your bare metal coreos storage registry pod
oc get pod -n openshift-image-registry -l docker-registry=default
#######################################
# Create oracle enterprise database on docker
podman login container-registry.oracle.com
podman pull container-registry.oracle.com/database/enterprise:21.3.0.0
podman run -d --name oracledb -p 1521:1521 -p 5500:5500

